{"version":3,"sources":["components/common/Home.js","components/common/Navbar.js","components/common/Error.js","components/quotes/QuoteCard.js","components/quotes/AllQuotes.js","hooks/useFilter.js","components/quotes/RandomQuote.js","lib/api.js","App.js","index.js"],"names":["Home","React","useEffect","console","log","className","Navbar","useState","isActive","setIsActive","role","aria-label","to","aria-expanded","onClick","aria-hidden","Error","QuoteCard","text","author","tag","id","random","localStorage","getItem","setItem","JSON","stringify","liked","setLiked","target","stringId","String","array","parse","indexOf","push","index","splice","AllQuotes","error","dislike","quotes","filter","quote","includes","tags","currentLoad","setCurrentLoad","slice","loadingArray","setLoadingArray","searchData","searchForm","setSearchForm","filteredQuotes","setFilteredQuotes","handleChange","e","name","value","filterQuotes","originalQuotes","filteredAuthor","toLowerCase","searchField","useFilter","document","getElementById","scrollTop","onChange","map","onScroll","scrollHeight","clientHeight","RandomQuote","quotesArray","Math","floor","length","randomQuote","setRandomQuote","baseUrl","getQuotes","axios","get","getAllTags","a","getQuotesRes","getTagsRes","quoteId","data","newQuotes","App","isError","setIsError","getApiData","then","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.d354fe95.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Home() {\n\n  React.useEffect( () => {\n    console.log(\n      '%c  -- GA Project: WoCRO --','font-weight: bold; font-size: 50px;color: red; text-shadow: 3px 3px 0 rgb(217,31,38) , 6px 6px 0 rgb(226,91,14) , 9px 9px 0 rgb(245,221,8) , 12px 12px 0 rgb(5,148,68) , 15px 15px 0 rgb(2,135,206) , 18px 18px 0 rgb(4,77,145) , 21px 21px 0 rgb(42,21,113)', '\\n',\n      'Hi there, thanks for checking out this project.', '\\n',\n      'I\\'m currently looking for employement opportunities.', '\\n',\n      'Feel free to get in touch if you\\'d like to have a chat!', '\\n',\n      '{', '\\n',\n      '  name: \\'Anthony Graham\\',', '\\n',\n      '  peopleCallMe: \\'üêú\\',', '\\n',\n      '  title', ': \\'Junior Software Engineer\\',', '\\n',\n      '  github: \\'https://github.com/databoy5000\\',', '\\n',\n      '  linkedin: \\'https://www.linkedin.com/in/anthonygdev/\\',', '\\n',\n      '  projectReadMe: \\'https://github.com/databoy5000/project-2/blob/main/README.md\\',', '\\n',\n      '}'\n    )\n  },[])\n\n  return (\n    <section className=\"hero is-fullheight-with-navbar has-background-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Quotetionary</h1>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Navbar() {\n  const [isActive, setIsActive] = React.useState(false)\n\n  const handleClick = () => {\n    setIsActive(!isActive)\n  }\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/\">‚úçüèª</Link>\n\n        <span role=\"button\" className={`navbar-burger ${isActive ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" onClick={handleClick}>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </span>\n      </div>\n\n      <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n        <div className=\"navbar-start\">\n          <Link className=\"navbar-item\" to=\"/\">\n            Home\n          </Link>\n\n          <Link className=\"navbar-item\" to=\"/random\">\n            Random Quote\n          </Link>\n\n          <Link className=\"navbar-item\" to=\"/all\">\n            Quotes\n          </Link>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar","function Error() {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"has-text-centered\">\n          <h1 className=\"title help is-danger\">üõë Ooopps something went wrong üõë</h1>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Error","import { useState } from 'react'\nfunction QuoteCard({ text, author, tag, id, random }) {\n  if (localStorage.getItem('dislike') === null) {\n    localStorage.setItem('dislike', JSON.stringify([]))\n  }\n\n  const [liked, setLiked] = useState(false)\n\n  const handleClick = ({ target: { id } }) => {\n    const stringId = String(id)\n    let array = []\n    if (localStorage.getItem('dislike')) {\n      array = JSON.parse(localStorage.getItem('dislike'))\n    }\n    if (array.indexOf(stringId) === -1) {\n      setLiked(true)\n      array.push(id)\n      localStorage.setItem('dislike', JSON.stringify(array))\n    } else {\n      const index = array.indexOf(stringId)\n      setLiked(false)\n      array.splice(index, 1)\n      localStorage.setItem('dislike', JSON.stringify(array))\n    }\n  }\n\n  return (\n    <section className=\"quotesCardContainer\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2 className=\"subtitle\">{text}</h2>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <p>Author: <span className=\"bold\">{author}</span> | Tag: <span className=\"italic\">{tag}</span></p>\n            </div>\n            <div className=\"column is-offset-half\">\n              {!random && <button className={`button ${liked ? 'is-dark' : ''}`} id={id} onClick={handleClick}>Dislike</button>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default QuoteCard","\nimport React from 'react'\nimport { useFilter } from '../../hooks/useFilter'\nimport Error from '../common/Error'\nimport QuoteCard from './QuoteCard'\n\n\nfunction AllQuotes({ error }) {\n  const dislike = JSON.parse(localStorage.getItem('dislike'))\n  const quotes = JSON.parse(localStorage.getItem('quotes')).filter(quote => !dislike.includes(String(quote.id)))\n  const tags = JSON.parse(localStorage.getItem('tags'))\n  const loadingHeight = 10\n  const [currentLoad, setCurrentLoad] = React.useState(loadingHeight)\n  const [loadingArray, setLoadingArray] = React.useState(quotes.slice(0, currentLoad))\n\n  const { searchForm, handleChange, filterQuotes, filteredQuotes } = useFilter({\n    tag: 'All',\n    searchField: '',\n  })\n  React.useEffect(() => {\n    if (quotes) {\n      filterQuotes(quotes)\n      if (filteredQuotes) {\n        setLoadingArray(filterQuotes(quotes).slice(0, loadingHeight))\n        setCurrentLoad(loadingHeight)\n        const target = document.getElementById('AllQuotes')\n        target.scrollTop = 0\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchForm])\n\n  const handleScroll = ({ target }) => {\n    if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n      setLoadingArray(filteredQuotes.slice(0, currentLoad + loadingHeight))\n      setCurrentLoad(currentLoad + loadingHeight)\n    }\n  }\n  return (\n    <>\n      { error && !quotes && !tags ?\n        <Error />\n        :\n        (<section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-one-third box\" id=\"filters\">\n                <h2 className=\"title\">Filter</h2>\n                <div className=\"field\">\n                  <label className=\"label has-text-centered\">Filter By Tag</label>\n                  <div className=\"select is-link\">\n                    <select name=\"tag\" onChange={handleChange}>\n                      <option value=\"All\">All</option>\n                      {tags && tags.map(tag => (\n                        <option key={tag.name} value={tag.name} >{tag.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label has-text-centered\">Search By Author</label>\n                    <div className=\"control\">\n                      <input className=\"input\" name=\"searchField\" onChange={handleChange} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column\" id=\"AllQuotes\" onScroll={handleScroll}>\n                {loadingArray ? (\n                  loadingArray.map(quote => (\n                    <div key={quote.id}>\n                      <QuoteCard  {...quote} />\n                    </div>\n                  ))\n                )\n                  :\n                  (!error && <p>...loading</p>)\n                }\n              </div>\n            </div>\n          </div>\n        </section>)\n      }\n    </>\n  )\n}\nexport default AllQuotes","import React from 'react'\nexport function useFilter(searchData) {\n  const [searchForm, setSearchForm] = React.useState(searchData)\n  const [filteredQuotes, setFilteredQuotes] = React.useState()\n  const handleChange = e => {\n    setSearchForm({ ...searchForm, [e.target.name]: e.target.value })\n  }\n  function filterQuotes(originalQuotes) {\n    const filteredTag = originalQuotes.filter(quote => quote.tag === searchForm.tag || searchForm.tag === 'All')\n    const filteredAuthor = filteredTag.filter(quote => quote.author.toLowerCase().includes(searchForm.searchField.toLowerCase()) || searchForm.searchField === '')\n    setFilteredQuotes(filteredAuthor)\n    return filteredAuthor\n  }\n  return {\n    searchForm,\n    handleChange,\n    filterQuotes,\n    filteredQuotes,\n  }\n}","import React from 'react'\n\nimport QuoteCard from './QuoteCard'\nimport Error from '../common/Error'\n\nfunction RandomQuote({ error }) {\n  const dislike = JSON.parse(localStorage.getItem('dislike'))\n  const quotesArray = JSON.parse(localStorage.getItem('quotes')).filter(quote => !dislike.includes(String(quote.id)))\n\n  const [randomQuote, setRandomQuote] = React.useState(\n    !!quotesArray &&\n    quotesArray[Math.floor(Math.random() * quotesArray.length)])\n\n  const handleClick = () => {\n    setRandomQuote(quotesArray[Math.floor(Math.random() * quotesArray.length)])\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"container has-text-centered\">\n        {error && !quotesArray && <Error />}\n        {randomQuote ?\n          (\n            <>\n              <QuoteCard {...randomQuote} random={true} />\n              <button className=\"button is-warning\" onClick={handleClick}>Get Random</button>\n            </>\n          )\n          :\n          (!error && <p>...loading</p>)\n        }\n\n      </div>\n    </section>\n  )\n}\n\nexport default RandomQuote","import axios from 'axios'\nconst baseUrl = 'https://goquotes-api.herokuapp.com/api/v1'\nexport function getQuotes() {\n  return axios.get(`${baseUrl}/all/quotes`)\n}\nexport function getAllTags() {\n  return axios.get(`${baseUrl}/all/tags`)\n}\n\n//getting and storing all the data\n\nexport async function getApiData() {\n  try {\n    const getQuotesRes = await getQuotes()\n    const getTagsRes = await getAllTags()\n    let quoteId = 0\n    const quotes = getQuotesRes.data.quotes\n    const tags = getTagsRes.data.tags\n    const newQuotes = quotes.map(quote => {\n      quoteId++\n      return { ...quote, id: quoteId }\n    })\n    localStorage.setItem('quotes', JSON.stringify(newQuotes))\n    localStorage.setItem('tags', JSON.stringify(tags))\n    return false\n  } catch (err) {\n    return true\n  }\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/common/Home'\nimport Navbar from './components/common/Navbar'\nimport AllQuotes from './components/quotes/AllQuotes'\nimport RandomQuote from './components/quotes/RandomQuote'\nimport { getApiData } from './lib/api'\n\n\nfunction App() {\n\n  const [isError, setIsError] = React.useState(false)\n  getApiData().then(data => {\n    setIsError(data)\n  })\n  if (localStorage.getItem('dislike') === null) {\n    localStorage.setItem('dislike', JSON.stringify([]))\n  }\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/random\">\n          <RandomQuote error={isError} />\n        </Route>\n        <Route path=\"/all\">\n          <AllQuotes error={isError} />\n        </Route>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}